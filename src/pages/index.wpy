<style lang="less">
  input {
    border: 1rpx solid #ccc;
    display: inline-block;
    width: 200rpx;
    border-radius: 5rpx;
  }
  .info {
    padding-right: 10rpx;
  }
  .userinfo {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .userinfo-avatar {
    width: 80rpx;
    height: 80rpx;
    border-radius: 50%;
  }

  .userinfo-nickname {
    color: #aaa;
  }

  .list {
    margin-top: 40rpx;
    width: 100%;
    .item {
      width: calc(100% - 80rpx);
      padding: 20rpx 40rpx;
      border-top: 1rpx solid #dedede;
      &:last-child {
        border-bottom: 1rpx solid #dedede;
      }
      .title {
        font-size: 48rpx;
      }
      .author {
        color: #999;
        font-size: 32rpx;
        margin-top: 20rpx;
      }
    }
  }
  .slide {
    width: 640rpx;
    display: flex;
    border: 1rpx solid #ccc;
    font-size: 28rpx;
    align-items: center;
    box-sizing: border-box;
    .left {
      width: 750rpx;
      padding: 20rpx;
    }
    .right {
      display: flex;
      .right-item {
        padding: 20rpx 30rpx;
        background-color: red;
        color: #fff;
      }
    }
  }
</style>
<wxs module="m1" lang="babel">
const getTime = (time) => {
  let date = getDate(time);
  let hour = date.getHours();
  let mins = date.getMinutes();
  let sec = date.getSeconds();
  let milli = date.getMilliseconds();
  return `${hour}:${mins}:${sec}.${milli}`;
}
module.exports.getTime = getTime;
</wxs>
<template>
  <div class="container">
    <div class="userinfo" @tap="handleViewTap">
      <image class="userinfo-avatar" src="{{ userInfo.avatar }}" background-size="cover"/>
      <div class="userinfo-nickname">{{ userInfo.nickname }}</div>
    </div>

    <div class="list">
      <div class="item" v-for="(item, index) in list" :key="index" @tap="handleTap(item)">
        <div class="title">{{item.title}}</div>
        <div class="author">
          {{item.user.nickname}}发布于{{item.createTime}}
        </div>
      </div>
    </div>


    <dialog id="van-dialog" @getuserinfo="onGetUserInfo"></dialog>

    <!--toast /-->
  </div>
</template>

<script>
  import wepy from '@wepy/core';
  import dayjs from 'dayjs';
  import store from '../store';

  import httpService from '../service/httpService';

  import Dialog from '../components/vant/dialog/dialog';

  wepy.page({
    store,
    config: {
      navigationBarTitleText: 'test'
    },

    hooks: {
      // Page 级别 hook, 只对当前 Page 的 setData 生效。
      'before-setData': function (dirty) {
        if (Math.random() < 0.2) {
          console.log('setData canceled');
          return false; // Cancel setData
        }
        dirty.time = +new Date();
        return dirty;
      }
    },

    mixins: [],

    data: {
      userInfo: {
        nickName: '加载中...'
      },
      currentTime: +new Date(),
      permissionVisible: false,
      list: []
    },

    computed: {

    },

    methods: {
      onGetUserInfo(e) {
        const self = this;
        console.log('获取用户信息了...');
        const userInfo = e.$wx.detail.userInfo;
        wx.login({
          success(res) {
            console.log(res);
            if (res.code) {
              httpService.post('/users/login', {
                code: res.code,
                nickName: userInfo.nickName,
                avatarUrl: userInfo.avatarUrl,
                gender: userInfo.gender
              }).then(res => {
                console.log(res);
                self.userInfo = res.userInfo;
                wx.setStorageSync('user', res.userInfo);
                wx.setStorageSync('token', res.token);
                self.init();
              }, err => {
                console.log('login error: ');
                console.log(err);
              });
            }
          },
          fail(err) {
            console.log(err);
          }
        });
      },
      init() {
        httpService.get('/message/list').then((res) => {
          console.log(res);
          res.forEach(item => {
            item.createTime = dayjs(item.create_at).format('YYYY-MM-DD HH:mm:ss');
          });
          this.list = res;
        });
      },
      handleTap(item) {
        this.$navigate({
          url: 'detail?id=' + item.id
        });
      }
    },

    created () {
      let self = this;

      const userInfo = wx.getStorageSync('user');
      if (userInfo) {
        // 创建token
        httpService.post('/users/createJWTToken', {
          id: userInfo.id,
          openid: userInfo.openid
        }).then(res => {
          self.userInfo = userInfo;
          wx.setStorageSync('token', res.token);
          self.init();
        });
      } else {
        Dialog.alert({
          title: '确认授权',
          message: '为了正常使用Easy Sign小程序，我们需要获取您的用户信息。',
          confirmButtonOpenType: 'getUserInfo',
          context: self.$wx
        });
      }
    },
    onShow() {
      this.init();
    }
  });
</script>
<config>
{
    navigationBarTitleText: '历史消息',
    usingComponents: {
      panel: '~@/components/panel',
      counter: '~counter',
      list: '../components/list',
      group: '../components/group',
      "slide-view": "module:miniprogram-slide-view",
      modal: '../components/modal',
      "van-button": '~@/components/vant/button/index',
      "dialog": '~@/components/vant/dialog/index'
    }
}
</config>
